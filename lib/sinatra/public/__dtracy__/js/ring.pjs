/* Displays a ring spinning around the edge of a second ring.
 * Speed of spinning is the variable here.
 */
class Ring {
  int delta = 0;
  float radius;
  float speed = 3.0;
  int count;
  string probe = '';
  
  Ring(int radius){
   this.radius = radius;
  }
  
  void draw(){
   background(255);
   
   ellipse(width/2, height/2, this.radius, this.radius);
   ellipse(width/2 + (this.radius/2)*cos(frameCount/this.speed),
           height/2 + (this.radius/2)*sin(frameCount/this.speed),
           this.radius/5, this.radius/5);
  }
  
  void addProbe(string probeName){
    this.probe = probeName;
    if(util.isDefined(dtracy.Probes[probeName]))
      this.count = dtracy.Probes[probeName].events.length;
    else
      this.count = 0;
  }
  
  void speed_up(int rate){
    if(this.speed <= 3.0)
      return;
    frameCount = round(frameCount*(this.speed - 1)/this.speed--);
  }
  
  void slow_down(int rate){
    if(this.speed >= 30.0)
      return;
    frameCount = round(frameCount*(this.speed + 1)/this.speed++);
  }
  
  void update(){
    if( this.probe != '' ){
      int current_count = dtracy.Probes[this.probe].events.length;
      int delta = current_count - this.count;
      this.count = current_count;
      
      if(delta > 27)
        delta = 27;
        
      int distance = ceil((this.delta - delta + 1) / 2);  
        
      if( delta == 0 && this.speed != 30)
        this.slow_down();
      if( this.delta < delta )
        this.speed_up();
      else if( this.delta > delta)
        this.slow_down();
        
      this.delta = delta;
    }
  }
}

Ring r = new Ring(50);
r.addProbe('ruby:path:path');
int c = 0;

void setup(){
   size(100, 100);
   smooth();
   strokeWeight(4);
   stroke(0, 121, 184);
   frameRate(30);
}

void draw(){
  r.draw();
  if( c == 60){
    r.update();
    c = 0;
  }
  else
    c++;
}

