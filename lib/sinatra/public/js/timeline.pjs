/* 
  PROCESSINGJS.COM - BASIC EXAMPLE
  Delayed Mouse Tracking  
  MIT License - Hyper-Metrix.com/F1LT3R
  Native Processing compatible 
*/  

// Global variables
float plotX1, plotY1, plotX2, plotY2;

// Setup the Processing Canvas
void setup(){
  size( 300, 300 );
  frameRate( 15 );

  plotX1 = 50;
  plotX2 = width - plotX1;
  plotY1 = 60;
  plotY2 = height - plotY1;
  timeline = new vis.Timeline(10, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);
  
  int barwidth = 4;
}

// Main draw loop
void draw(){

  int w = 15;

  background(221);
  
  fill(221);
  rectMode(CORNERS);
  noStroke();
  rect(plotX1, plotY1, plotX2, plotY2);
  stroke(255);
  strokeWeight(2);
  fill(0, 121, 184 );
  for(i in timeline.data){
    float value = timeline.data[i];
    float x = map(i, 0, timeline.data.length - 1, plotX1, plotX2);
    float y = map(value, timeline.data.min(), timeline.data.max(), plotY2, plotY1);
    rect(x-w/2, y, x+w/2, plotY2);
  }
                
}

void mouseClicked(){
  /*
  nX = mouseX;
  nY = mouseY;  
  */
  
  timeline.data = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];
}